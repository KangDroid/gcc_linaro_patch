--- gcc-5.0/libgomp/config/linux/futex.h.omv~	2015-01-03 12:45:11.657846480 +0100
+++ gcc-5.0/libgomp/config/linux/futex.h	2015-01-03 12:45:38.064689252 +0100
@@ -38,6 +38,10 @@
 
 #pragma GCC visibility pop
 
+#if !defined(SYS_futex)
+#define SYS_futex __NR_futex
+#endif
+
 static inline void
 futex_wait (int *addr, int val)
 {
--- gcc-5.0/libgomp/config/linux/proc.c.omv~	2015-01-03 12:45:56.378144531 +0100
+++ gcc-5.0/libgomp/config/linux/proc.c	2015-01-03 12:48:26.195803418 +0100
@@ -244,7 +244,7 @@ sc_nprocessors_actu ()
 
     if (buffer_len < 0)  /* should not happen */ {
         fprintf(stderr,"Could not find %s: %s\n", file_name, strerror(errno));
-        return;
+        return 1;
     }
 
     /* Count the CPU cores, the value may be 0 for single-core CPUs */
@@ -321,8 +321,10 @@ gomp_init_num_threads (void)
   free (gomp_cpusetp);
   gomp_cpusetp = NULL;
 #endif
-#ifdef _SC_NPROCESSORS_ONLN
+#if defined(__ANDROID__)
   gomp_global_icv.nthreads_var = sc_nprocessors_actu ();
+#elif defined(_SC_NPROCESSORS_ONLN)
+  gomp_global_icv.nthreads_var = sysconf (_SC_NPROCESSORS_ONLN);
 #endif
 }
 
@@ -352,8 +354,10 @@ get_num_procs (void)
       return gomp_available_cpus;
     }
 #endif
-#ifdef _SC_NPROCESSORS_ONLN
+#if defined(__ANDROID__)
   return sc_nprocessors_actu ();
+#elif defined(_SC_NPROCESSORS_ONLN)
+  return sysconf (_SC_NPROCESSORS_ONLN);
 #else
   return gomp_icv (false)->nthreads_var;
 #endif
--- gcc-5.0/libgomp/configure.omv~	2015-01-03 12:48:31.039168677 +0100
+++ gcc-5.0/libgomp/configure	2015-01-03 12:49:50.139688833 +0100
@@ -15212,6 +15212,12 @@ case "$target" in
 /* end confdefs.h.  */
 #include <sys/syscall.h>
 	   int lk;
+#if !defined(SYS_gettid)
+#define SYS_gettid __NR_gettid
+#endif
+#if !defined(SYS_futex)
+#define SYS_futex __NR_futex
+#endif
 int
 main ()
 {
@@ -15264,6 +15270,12 @@ rm -f core conftest.err conftest.$ac_obj
 /* end confdefs.h.  */
 #include <sys/syscall.h>
 	   int lk;
+#if !defined(SYS_gettid)
+#define SYS_gettid __NR_gettid
+#endif
+#if !defined(SYS_futex)
+#define SYS_futex __NR_futex
+#endif
 int
 main ()
 {
